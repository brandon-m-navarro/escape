Coordinate
~~~~~~~~~~

	SquareCoordinate
	================
	1. (3, 4) -> (3, 6) | 2		- Simple horizontal check
	2. (3, 6) -> (3, 5) | 1
	
	3. (5, 5) -> (8, 5) | 3		- Simple vertical check
	4. (8, 5) -> (4, 5) | 4
	
	5. (4, 2) -> (8, 6) | 4		- Simple diagonal check (UP: L -> R)
	6. (7, 5) -> (4, 2) | 3
	
	7. (3, 7) -> (2, 6) | 1		- Simple diagonal check (DOWN: R -> L)
	8. (2, 6) -> (4, 8) | 2
	
	9. (4, 4) -> (8, 5) | 4		- Diagonals are allowed, so (UP: L -> R) once
							  	  then UP 3 more times	  
	10. (4, 4) -> (1, 5) | 3
	
	11. (4, 6) -> (6, 2) | 4   	- Slightly more complex case where we need to
							  	  traverse diagonally twice
	12. (6, 2) -> (4, 6) | 4
	
	13. (5, 6) -> (2, 2) | 4
	14. (5, 6) -> (1, 4) | 4
	
	OrthoSquareCoordinate
	====================
	15. (3, 4) -> (3, 6) | 2	- Simple horizontal check
	16. (3, 6) -> (3, 5) | 1
	
	17. (5, 5) -> (8, 5) | 3	- Simple vertical check
	18. (8, 5) -> (4, 5) | 4
	
	19. (4, 2) -> (8, 6) | 8	- Simple diagonal check (UP: L -> R)
	20. (7, 5) -> (6, 4) | 2
	
	21. (3, 7) -> (2, 6) | 2	- Simple diagonal check (DOWN: R -> L)
	22. (2, 6) -> (4, 8) | 4
	
	23. (4, 4) -> (8, 5) | 5	- Diagonals are allowed, so (UP: L -> R) once
							  	  then UP 3 more times	  
	24. (4, 4) -> (1, 5) | 4
	
	25. (4, 6) -> (6, 2) | 6   	- Slightly more complex case where we need to
							  	  traverse diagonally twice
	26. (6, 2) -> (4, 6) | 6
	
	HexCoordinate
	=============
	27. (0, 0) -> (-1, 1) | 1	- Up and to the left
	28. (-1, 1) -> (0, 0) | 1
	
	29. (0, 0) -> (-1, 0) | 1	- Down and to the left
	30. (-1, 0) -> (0, 0) | 1
	
	31. (0, 0) -> (0, -1) | 1	- Down
	32. (0, -1) -> (0, 0) | 1
	
	33. (0, 0) -> (1, -1) | 1	- Down and to the right
	34. (1, -1) -> (0, 0) | 1
	
	35. (0, 0) -> (1, 0) | 1	- Up and to the right
	36. (1, 0) -> (0, 0) | 1
	
	37. (0, 0) -> (0, 1) | 1	- Up
	38. (0, 1) -> (0, 0) | 1
	
	~~~~~~~~~~~ (-3, 0) -> (1, -1) | 4 ~~~~~~~~~~~~~~~~~~ NEEDS TO BE RE-VISITED
	
	
	
BoardBuilder
~~~~~~~~~~~~
XML Config
	Board 1 :: 
		BoardInitializer [xMax=8, yMax=8, coordinateId=SQUARE, 
						 locationInitializers=
						 	[LocationInitializer 
						 		[x=2, y=2, locationType=CLEAR, player=PLAYER1, pieceName=HORSE],
						 	LocationInitializer 
						 		[x=3, y=5, locationType=BLOCK, player=null, pieceName=null]]]
						 		
	Board 2 :: 
		BoardInitializer [xMax=8, yMax=8, coordinateId=ORTHOSQUARE, 
						 locationInitializers=
						 	[LocationInitializer 
						 		[x=2, y=2, locationType=CLEAR, player=PLAYER1, pieceName=HORSE],
						 	LocationInitializer 
						 		[x=3, y=5, locationType=BLOCK, player=null, pieceName=null]]]
						 		
	Board 1 :: 
		BoardInitializer [xMax=8, yMax=8, coordinateId=HEX, 
						 locationInitializers=
						 	[LocationInitializer 
						 		[x=2, y=2, locationType=CLEAR, player=PLAYER1, pieceName=HORSE],
						 	LocationInitializer 
						 		[x=3, y=5, locationType=BLOCK, player=null, pieceName=null]]]

	SquareBoard
	===========
	Check that the board can only place pieces within the appropriate boundries of xMax & yMax
	
	assertNotNull on the spots that are expected to have a piece on them
	
	Check whether we are able to put a new piece on the map
	
	Check that getPieceAt still returns null if the space is initialized with any
	location type (CLEAR, BLOCK, EXIT)
		
	
	OrthoSquareBoard
	================
	
	HexBoard
	========
	
	